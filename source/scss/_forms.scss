
@keyframes loading {
  0% { background-position: 0 0; }
  100% { background-position: 15px 0; }
}

// input[type="text"],
// input[type="password"],
// input[type="date"],
// input[type="datetime"],
// input[type="datetime-local"],
// input[type="month"],
// input[type="week"],
// input[type="email"],
// input[type="number"],
// input[type="search"],
// input[type="tel"],
// input[type="time"],
// input[type="url"],
// textarea, .select {

//   @include placeholder {
//     color: #807a7a;
//     font-size: 14px;
//   }

//   -webkit-appearance: none;
//   display: block;
//   margin-bottom: 18px;

//   width: 300px;
//   height: 41px;
//   padding: 13px 16px;

//   border: 1px solid #e0e0e0;
//   @include border-radius(3px);
//   @include background-clip(padding-box);
//   background-color: #f7f7f7;
//   @include background-image(linear-gradient(to bottom, #fff 0%, #f7f7f7 100%));


//   color: #807a7a;
//   font-size: 14px;
// }

// textarea {
//   height: 100px;
// }

.btn, a.btn, input[type=submit] {
  display: inline-block;
  border-style: solid;
  border: none;
  text-decoration: none;
  position: relative;
  clear: both;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;

  text-align: center;
  color: #fff;
  font-size: 16px;
  font-weight: bold;
  text-transform: uppercase;

  padding: 12px 20px;

  height: 47px;
  background-color: #c70305;

  margin-bottom: 18px;
  position: relative;

  //@include transition(all .4s ease);

  &:after {
    position: absolute;
    display: block;
    content: ' ';
    width: 100%;
    height: 5px;
    background-color: #f7b900;
    left: 0;
    bottom: 0;
    //@include transition(all .4s ease);
  }

  &:hover {
    color: #FFF;
    background-color: lighten(#c70305, 2%);
    &:after {
      @include background-image(linear-gradient(
        left top,
        #DF6D19 25%,
        transparent 25%,
        transparent 50%,
        #DF6D19 50%,
        #DF6D19 75%,
        transparent 75%,
        transparent)
      );
      background-size: 15px 15px;
      animation: loading .4s linear infinite;
    }
    &:active {
      top: 3px;
    }
  }

  &.btn {
    padding-top: 0;
    padding-bottom: 0;
    line-height: 42px;
  }
}



textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

$ap-default: (
  height: 36px,
  margin: 1em,
  border: 1px,
  border-radius: 0,
  font-size: 1em,
  border-color: #dfdfdf,
  label-color: #666666,
  active-color: #f7b900,
  valid-color: #23a045,
  placeholder-background-color: #f9f9f9,
  textarea: false
  );

$adaptive-placeholder: ();


// adaptive-placeholder
// --------------------
// - Creates adaptive placeholder

@mixin adaptive-placeholder($map: $adaptive-placeholder) {
  // Only overwrite ap defaults if $map is $adaptive-placeholder
  @if $map == $adaptive-placeholder {
    $ap-default: map-merge($ap-default, $map) !global;
    $map: $ap-default;
  }
  // Updates default map with new values
  $map: map-merge($ap-default, $map);
  // Gets variables
  $height: map-get($map, height);
  $margin: map-get($map, margin);
  $border: map-get($map, border);
  $radius: map-get($map, border-radius);
  $font-size: map-get($map, font-size);
  $border-color: map-get($map, border-color);
  $label-color: map-get($map, label-color);
  $active-color: map-get($map, active-color);
  $valid-color: map-get($map, valid-color);
  $placeholder-background: map-get($map, placeholder-background-color);
  $isTextarea: map-get($map, textarea);
  $borders: $border * 2;


  // Warnings for best practices
  @if $height < 2 * $margin {
    @warn "height needs to be at least 2x margin";
  }

  @if $height < $font-size {
    @warn "height needs to be at least >= font-size";
  }

  // Input / Textarea properties
  background-color: $placeholder-background;
  height: calc(#{$height} + #{$borders});
  padding: $margin;
  font-size: $font-size;
  border: $border solid $border-color;
  border-radius: $radius;

  -webkit-transition: all 0.2s ease-out;
  transition: all 0.2s ease-out;

  -webkit-box-shadow: none;
  box-shadow: none;

  resize: none;
  outline: none;
  &:hover {
    border: $border solid $border-color;
  }
  &:focus,
  &:active {
    border: $border solid $active-color;
    background-color: #fff;
    & + label:before {
      color: $active-color;
    }
  }
  // Placeholder Styles
  & + label {
    display: block;
    font-size: $font-size;

    // Vertically align label with input
    @if $isTextarea {
      height: calc(#{$height} + #{$borders});
      line-height: 1;
      padding-top: calc(#{$margin} + #{$border});
    }
    @else {
      height: $height;
      line-height: $height;
    }

    // Offset label correctly with negative margins
    @if $isTextarea {
      margin-top: calc(-#{$height} - #{$borders});
    }
    @else {
      margin-top: calc(-#{$height} - #{$border});
    }
    margin-bottom: 1em;
    pointer-events: none; // allows clicking through label

    &:before {
      // Initial Text
      content: attr(placeholder);
      display: inline-block;
      color: $label-color;
      margin: 0 calc(#{$margin} + #{$borders});
      white-space: nowrap;
      // Transformation properties

      -webkit-transition-property: -webkit-transform, color;
      transition-property: transform, color;
      -webkit-transition-duration: 0.2s;
      transition-duration: 0.2s;
      -webkit-transition-delay: 0;
      transition-delay: 0;
      -webkit-transition-timing-function: ease-out;
      transition-timing-function: ease-out;
      // Set origin to left center so it scales to the left instead of center center
      -webkit-transform-origin: left center;
      -ms-transform-origin: left center;
      transform-origin: left center;
    }
  }

  // Focused, active and valid states for input and placeholder
  // Shifts up and adds a background white
  &:focus,
  &.active,
  &:valid {
    & + label:before {
      background: $placeholder-background;
      background-color: #fff;
      color: #666666;
      // set padding for left & right of tiny placeholder text
      line-height: 1;
      padding: 0 $border * 1.5;
      @if $isTextarea {
        -webkit-transform: translateY(calc((-#{$margin} - 0.5em) - #{$border * 0.5})) scale(0.8, 0.8);
        -ms-transform: translateY(calc((-#{$margin} - 0.5em) - #{$border * 0.5})) scale(0.8, 0.8);
        transform: translateY(calc((-#{$margin} - 0.5em) - #{$border * 0.5})) scale(0.8, 0.8);
      }
      @else {
        -webkit-transform: translateY(calc(-#{$height} / 2 - #{$border}/2)) scale(0.8, 0.8);
        -ms-transform: translateY(calc(-#{$height} / 2 - #{$border}/2)) scale(0.8, 0.8);
        transform: translateY(calc(-#{$height} / 2 - #{$border}/2)) scale(0.8, 0.8);
      }
    }
  }
  // Change placeholder value once text is entered.
  &:valid {
    border: $border solid $valid-color;
    & + label:before {
      content: attr(alt);
      color: $valid-color;
      color: #666666;
    }
  }
}

// Start paying attention here!

// Set Defaults for Adaptive Placeholder
// See all available variables at https://github.com/zellwk/adaptivePlaceholders
$adaptive-placeholder: (
  height: 3em,
  margin: 1em,
  font-size: 1em,
    );

// Set Adaptive Placeholder to use with Textareas
// Note the use of textarea key
$textarea-placeholder: (
  height: 18em,
  border-radius: 0,
  textarea: true,
  );

$select-placeholder: (
  valid-color: #f7b900,
  textarea: false
  );


// Calling adaptive placeholder for input
input[type="text"],
input[type="password"],
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="month"],
input[type="week"],
input[type="email"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="time"],
input[type="url"] {
  width: 18em;
  @include adaptive-placeholder();
}

// calling adaptive placeholder for textarea
textarea {
  width: 25em;
  @include adaptive-placeholder($textarea-placeholder);
}

select {
  -webkit-appearance: none;
  -moz-appearance:    none;
  appearance:         none;
  height: 36px;
  border: 1px solid #f7b900;
  background-color: #fff;
  border-radius: 0;
  margin-bottom: 27px;
  display: block;
  width: 100%;
  max-width: 400px;
  outline: none;

  color: #000;
  font-family: "PT Sans", sans-serif;
  font-size: 16px;
  font-weight: 600;
  padding: 0 35+16px 0 16px;


  & + label {
    display: block;
    width: 100%;
    max-width: 400px;
    position: relative;
    &:after {
      content: ' ';
      display: block;
      width: 35px;
      height: 36px;
      background-color: #f7b900;
      position: absolute;
      top: -36-27px; right: 0;
      pointer-events: none;

      font-family: FontAwesome;
      speak: none;
      font-style: normal;
      font-weight: normal;
      font-variant: normal;
      text-transform: none;
      line-height: 1;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      content: "\f107";

      color: #FFF;
      text-align: center;
      font-size: 22px;
      line-height: 36px;
    }
  }
}
